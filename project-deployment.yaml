apiVersion: v1 
kind: Service 
metadata:  
  name: mysql-service
spec:  
  type: ClusterIP
  ports:
    - port: 3306
      protocol: TCP
      targetPort: mysql
  selector:    
      app: mysql
---
apiVersion: v1
kind: Service
metadata:
  name: webserver-service
  labels:
    app: webserver
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30090
  selector:
    app: webserver
---
apiVersion: v1
kind: Service
metadata:
  name: webui-service
  labels:
    app: webui
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    app: webui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "test1234"
        - name: MYSQL_DATABASE
          value: "project"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d/init.sql
          subPath: init.sql
      volumes:
      - name: init-script
        configMap:
          name: mysql-init-script
  strategy:
    type: Recreate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webui
spec:
  selector:
    matchLabels:
      app: webui
  replicas: 1
  template:
    metadata:
      labels:
        app: webui
    spec:
      containers:
      - name: webui
        image: ajmosley345/468-project:webui
        command: ["/scripts/startup.sh"]
        env:
        - name: DATABASE_URL
          value: mysql://remote:test1234@db:3306/project?schema=public
        ports:
        - containerPort: 3000
          volumeMounts:
          - name: startup-script
            mountPath: /scripts
      volumes:
      - name: startup-script
        configMap:
          name: webui-startup-script
          defaultMode: 0744
        
        # command:
        # - /bin/sh
        # - -c
        # - "sleep 10 && npx prisma db push --accept-data-loss && npx prisma db seed && yarn run dev"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  selector:
    matchLabels:
      app: webserver
  replicas: 1
  template:
    metadata:
      labels:
        app: webserver
    spec:
      containers:
      - name: webserver
        image: ajmosley345/468-project:webserver
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
